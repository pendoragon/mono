name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ 'master', 'release-*' ]
    # Publish semver tags as releases.
  pull_request: {}
  release:
    types: [ 'published' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  # github.repository as <account>/<repo>
  # IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      matrix:
        target: [app1, app2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY_GITHUB }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log into registry ${{ env.REGISTRY_DOCKERHUB }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY_GITHUB }}/${{ github.repository }}-${{ matrix.target }}

      # For pushes on main or release-* branch,
      # use ${repo_branch_name}-${commit_sha} as image tag
      - name: Set image tag for pushes
        id: image-tag-push
        if: ${{ github.event_name == 'push' }}
        run: echo "IMAGE_TAG=${GITHUB_REF#refs/*/}-${GITHUB_SHA}" >> $GITHUB_ENV
      
      # For releases use ${repo_tag} as image tag
      - name: Set image tag for release
        id: image-tag-release
        if: ${{ github.event_name == 'release' }}
        run: echo "IMAGE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # For pull requests use ${repo_sha} as image tag
      - name: Set image tag for pr
        id: image-tag-pr
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: build/dockerfiles/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            BINARY=${{ matrix.target }}
          tags: |
            ${{ env.REGISTRY_GITHUB }}/${{ github.repository }}-${{ matrix.target }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY_DOCKERHUB }}/${{ secret.DOCKERHUB_USERNAME }}-${{ matrix.target }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,target={{ matrix.target }}
          cache-to: type=gha,mode=max,target={{ matrix.target }}
